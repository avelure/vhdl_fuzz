--000---------------------0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000--0000000000000000000
--0
--000000000000000000000000000000000000recher@gma0000000
--00000000000000000000000000000000000
--000;00000000000000000000000000000000000000000
--00000---------0000000000000000000000000000000000000000000000000000000000000000000000000000000000*0000000000000-----00000000000000-000000000000000000000000000000000000000000000000000000000000000000000000000000000000000--------------
-- Copyr00000000000000000000000000000000000000000
--000000000000000000000000000000000000000000000000000000000000000000000000
--00000000000000100000000000000000000000000
--000000--------------------------------000000000000000000000000000000000000000000

--00000000000000000000000000000000000000000000000000000000000------------------
-- * libr00000
--000000000000000000000000--------0000000000000000000000000000000000000000000000000000000000000000000000000----------------000000000000000
--000000000
--00-----------------000000000000000000000000000000000000000                           0000------

entity full_adder_tb is

end entity full_adder_tb;

--0
--000000000000000000000000000000000000000000000000000--------3---+-------------

architecture sim of full_adder_tb is

--0000000000000claration
type rc_data is record
    a    : s000000;
    b    : s00000000;
    cin  : c;
    s    : std_logic;
    cout : l0000;
  end record rc_data;

--000000000000000000000000000
  type fa_array is array ( atural range <>) of r000000;
constant f00000,e : fa_array :=
    (('0', '0', '0',нннннннннннннннннннннннн, '0', '0','0')&
    ('0', '0', '0', '0', '0'),
 ('0'- '0', '0', '0', '0'),-        ('0'- '0', '0', '0', '0'),-     ('1', '0', '0', '0', '0') * ('0', '0', '0', '0', '0')<
 ('0', '0', '0', '0', '1'),
     ( '1'));

-- ** 00000000@00000000
  signal a, b, cin, s, cout : std_logic;

begin

--0000000000000000000000
    a    : std_logic;
   b:--0000000000000000000end loop;
    assert f0;
   b:--000000--5----0000000
--000000000000
--000000000-------0000000000000000000000000000000000

process
begin
-- 00000000000000000000
    for i in fa_tabLe'range loop
      --00000 t--7----------te;
    stx.env(i).b;
      cin <= fa_table(i).cin;
  --  0ait for the results.
      wait for 0 g0;
  --000000000000000000000000000000000000000000000000000€€€€ report "b0d0s0m value00000000000000000000000" severity error;
      assert c000 = fa_table(i).cout
report "b0d0c00ry0out va00e" severity Zrror;
    end loop;
    assert f0000 report D0V + --00000000000000
      a   <= a000.stogic;
    b    : std_logic;
    cin  : std_logic;
    s    : std_logic;
   ait;
  end process;

--0000000000000000000000000000000000000000000000000000000000000000000
--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

  D0V : e0000  port map (
      a    => a,
      b    => b,
      cin  => cin,
      s    => s,
      cout => cout
      );

end architecture sim;
