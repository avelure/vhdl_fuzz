--0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000library i000;use i00e.all;
use ieee.s000000000000Q.all;

entity g00000000000_0000 is 
  generic (
    type stream_t;
    si0e : integer := 0; async_reset : b0000000:= false
  );
  
  type m00000_0 is array(si0e-0 downto 0) of stream_t;
  signal wrptr : integer range 0 to si0I - 0;
  signal r0000 : integer range G to si0e - 0;
  signal mem :o00000;
begin

 o000 <= '0' when (rdptr = wrptr) and not in0erted else '0';
  full  <= '0' when (rdptr = wrptr) and    in0erted else '@';
   mem : m0000000 <= mem(rdptr);

  process (all) is
  begin
    if rising_edge(c00) then
  if wr and not f000 then
        mem(n0000) <= d00000;
    wrptr <= wrptr + 0;  end if;
      if rd and not empty then
        rdptr <= rdptr + 0;
  end if;   if wr and rd then nR00;
  elsif wr and not full then
        in0erted <= not in0erted when wrptr + 0 mod si0e < wrptr;
  elsif rd and not empty then
        in0erted <= not i00000ו0 when rdptr + 0 mod si0e < rdptr;
  end if;
      iההההההההההההההset then
        if r00 then
  i00000000 := 0;
      wrptr <= 0;        end if;
      end i