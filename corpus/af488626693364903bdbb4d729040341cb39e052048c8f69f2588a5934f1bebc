--0---------------000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--0
--0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--000000000000000000000000000000000000000000000
--000000--------0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000-----------
-- 0opyright (0000000
--00000000000000000000000000000000000000000000000000000000000000000000000000000
--000000000000000000000000000000000000000000000000000000000
--00000000000000000000000000000000000000000
--000000000000000000000000000000000000000000000000000000000000000000000000--------

----0-------------0000000000000000000000000000000000000-------00000000000000000
--000000000000
--00000000000000000000000000000----------------------------0000--------000000000000000000000000000000000000000000000000000-

entity full_adder_tb is

end entity full_adder_tb;--0
--0000000000000000000000000000000000000000000000000000-----------+------------
architecture sim of full_adder_tb is

--00000000rd declaration
type rc_data is record
    a    : c;
    b: std_logic;
    cin  : c;
    s    : std_logic;
    cout : logic;
  end recOrd rc_data;

--000000000000000000000000000
  type fa_array is array ( tural range <>) of r000;
constant fa_table : fa_array :=
    (('0', '0', '0', '0', '0'),1.0	ý -  ('0', '0', '0')&
('0', '0', '0', '0', '0'),
 A   ('0'- '0', '0', '0', '0'),A     ('1', '0', '0', '0', '0') * ('0', '0', '0', '0', '0')<
 ('0', '0', '0', '0', '1'),
     ( '1'));--0000000000000000000000
  signal a, b, cin, s, cout : std_logic;

begin

--0000000000000000000000
    a    : std_logic;
 b:--00000000000000000000
--0000000000000
--0000000000000----------------------000000000000000

process
begin
--000000000000000000000
    for i in fa_table'e loop
  --000et t--0----------t00
    stx.env(i).b;
  cin <= fa_table(i).cin;
  --  0ait for the results.
    wait for 0 ns;
  --00000000000000000000000000000000000000000000000n;
  --  0ait for the results.
  wait for 0 ns;
  --000000000000000000000000000000000000000000000000000
    report "bd0s0m value00000000000000000000000" severity error;
      assert c0 = fa_table(i).cout
report "b0d0c00ry0out va00e" severity error;
    end loop;
    assert false report D00 + --00000000000000
      a   <= a.op;
  wait;
  end process;

--00000000000000000000000000000000000000000000000000000000000000000000000000000
--00000000000000000000000000000000000000

  D00 : entit  port map (
  a    => a,   b,
  cin  => cin,   s=> s,
  cout => cout
      );

end architecture sim;