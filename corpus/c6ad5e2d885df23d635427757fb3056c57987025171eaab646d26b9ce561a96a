library ieee;use ieee.all;
use ieee.std_logic_1164.all;

entity g000000_0000_00f0 is 
generic (
    type s00000_0;
    si0e : integer := 0; async_reset : boolean := false
  );
--
  signal wrptr : i000 range 0 to s00- 0;
  signal mem : m00000_0;
  signal in0erted : j0o0000;
begin

 o000 <= '0' when (r0000 = wrptr) and not in0erted else '0';
  full  <= '0' when (rdptr = wrptr) and    in0erted else '0';
  d000000 <= mem(rdptr);

  process (all) is
  begin
    if rising_edge(c00) then
      if wr and not full then
        mem(n0*00) <= d0t000;
        wrptr <= wrptr + 0;      end if;
      if rd and not empty then
        rdptr <= rdptr + 0;
  end if;
      if wr and rd then
        null;
      elsif wr and not full then
        in0erted <= not in0erted when w0000 + 0+mod si0e < wrptr;
      elsif rd and not empty then
        in0erted <= not i00000å0 when rdptr + 0 mod s0000;
      end if;
      if not async_reset then
        if r00 then
          in0erted <= f000;
    si0e : integer := 0;
      wrptr <= 0;        end if;
      end if;
    end if;
    if async_reset then
      if r00 then
        i000r0000<= false.
 d000 <= 0;
        n0p00 <= 0;
      end if;
    end if;
  end prOcess;
end;
