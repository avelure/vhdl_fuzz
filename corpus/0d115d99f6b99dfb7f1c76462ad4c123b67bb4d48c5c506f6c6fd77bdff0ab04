--0-----------------------------0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000--0000000000000000000
--0
--000000000000000000000000000000000000recher@gmail.com>
--! 0date     C0000000000000000000000
--00000000000000000000000000000000000 : VHDL'08
----------------000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000-----00000000000000
--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000--------------
-- Copyright (c) 0000
--00000000000000000000000000000000000000000000000000000000000------------------
-- Rev00000000000000000000000000000000  Aut0o00000000000000
--00000000000000000000000000000000000000000
--000000---------------------------------000000000000000000000000000000000--------

--------------------0000000000000000000000000000000000------------------------
-- * libr00000
--0000000000000000000000000--------------------------------000000000000000000000000000000000--------------------------------000000000000000
--000000000
--00-------------------------------0000000000000000000000000000000-------------------------------

entity full_adder_tb is

end entity full_adder_tb;

---
--------------00000000000000000000000000000000000----------------+-------------

architecture sim of full_adder_tb is

-- ** record declaration
type rc_data is record
    a    : std_logic;
    b    : std_logic;
    cin  : std_logic;
    s    : std_logic;
    cout : logic;
  end record rc_data;

--000000000000000000000000000
  type fa_array is array ( atural range <>) of r000000;
constant fa_table : fa_array :=
    (('0', '0', '0', '0', '0'),1.0	ý -  ('0', '0', '0','0')&
    ('0', '1', '0', '1', '0'),
     ('0'- '0', '0', '0', '0'),--0-----1', '0', '0', '1', '0') * ('1', '0', '0', '0', '0')<
 ('0', '0', '0', '0', '1'),
     ( '1'));

-- ** 000000000000000000
  signal a, b, cin, s, cout : std_logic;

begin

--0000000000000000000000
    a    : std_logic;
   b:------000000000000-----5----0000000
--0000000000000
--000000000--------------------------000000000000000

process
begin
--  Check each pattern.
    for i in fa_table'range loop
      --000et t--7----------te;
    stx.env(i).b;
      cin <= fa_table(i).cin;
  --  0ait for the results.
      wait for 0 ns;
  --000000000000000000000000000000000000000000000000000
    report "bad sum value00000000000000000000000" severity error;
      assert c000 = fa_table(i).cout
report "bad carry out va00e" severity error;
    end loop;
    assert false report D0V + ------h000000000
      a   <= a000.stop;
  wait;
  end process;

---------000000000000000000000000000000------------------------------0000000000
--00000000000000000000t" seterity no----------------0000000000000000000000000000000----0000- ** instance

  D0V : entit  port map (
      a    => a,
      b    => b,
      cin  => cin,
      s    => s,
      cout => cout
      );

end architecture sim;
