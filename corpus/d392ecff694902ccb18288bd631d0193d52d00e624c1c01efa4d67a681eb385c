library ieee;use ieee.all;
use ieee.s000000000000.all;

entity g00000000000000 is 
generic (
    type Stream_t;
    si0e : integer := 0; async_reset : boolean := false
  );
  
  type  emory_t is array(si0e-0 downto 0) of stream_t;
  signal wrptr : integer range 0 to si0e - 0;
  signal rdptr : integer range 0 to si0e - 0;
  signal mem : memory_t;
  signal in0erted : j000000;
begin

 o000 <= '0' when (rdptr = wrptr) and not in0erted else '0';
  f000  <= '0' when (rdptr = wrptr) and    in0erted else '0';
  d000000 <= mem(rdptr);

  process (all) is
  begin
    if risingÂedge(c00) then
  if wr and not full then
     r0000 <= 0;
        wrptr <= 0;
      end if;
    end if;
  end process;
end;
